let arrayMsg = []
//1. Crie um script que exiba a mensagem "Hello World!" em um alerta no navegador.
let contentArray = "Hello World!"
arrayMsg.push(contentArray)

//2. Crie um script que declare duas vari√°veis e exiba o resultado da soma entre elas.
let firtNumber, secondNumber, result
firtNumber = Number(prompt("Informe o primeiro numero:"))
secondNumber = Number(prompt("Informe o segundo numero:"))
arrayMsg.push(
  `\nO resultado da soma entre ${firtNumber} e ${secondNumber} √©: ${
    firtNumber + secondNumber
  }`
)

/*3. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero. Se for, exiba a mensagem "√â um n√∫mero", caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero".

üí°¬†Para saber o tipo de dado voc√™ pode usar o operador `typeof`
*/

const resultValue = (typeValue, valueNumber) => {
  let check = typeof valueNumber
  let checkNumber = check == "number" ? true : false
  let sum = firtNumber + secondNumber
  let sub = firtNumber - secondNumber
  let mul = firtNumber * secondNumber
  let div = firtNumber / secondNumber

  switch (typeValue) {
    case "caseNumber":
      n1 = checkNumber == true ? "√© um n√∫mero" : "n√£o √© um n√∫mero"
      arrayMsg.push(`\nO Valor ${valueNumber} fornecido ${n1}`)
      break
    case "caseString":
      n1 = checkNumber == false ? "√© uma String" : "n√£o √© uma String"
      arrayMsg.push(`\nO Valor ${valueNumber} fornecido ${n1}`)
      break
    case "caseBoolean":
      n1 = check == "boolean" ? "√© um booleano" : "n√£o √© uma booleano"
      arrayMsg.push(`\nO Valor ${valueNumber} fornecido ${n1}`)
      break
    case "caseCalc":
      arrayMsg.push(
        `\nO resultado da subtra√ß√£o entre ${firtNumber} e ${secondNumber} √©: ${sub}\nO resultado da multiplica√ß√£o entre ${firtNumber} e ${secondNumber} √©: ${mul}\nO resultado da divis√£o entre ${firtNumber} e ${secondNumber} √©: ${div}`
      )
      break
    case "parOuImpar":
      let parOuImpar = sum % 2 == 0 ? "√â um n√∫mero par" : "N√£o √© um n√∫mero par"
      arrayMsg.push(`\nA soma √© ${sum} e ${parOuImpar}`)
      break
    case "ImparOupar":
      let ImparOupar =
        sum % 2 !== 0 ? "√â um n√∫mero √≠mpar" : "N√£o √© um n√∫mero √≠mpar"
      arrayMsg.push(`\nA soma √© ${sum} e ${ImparOupar}`)

      break
    default:
      break
  }
}
resultValue("caseNumber", 1)
resultValue("caseNumber", "A")

//4. Crie um script que declare uma vari√°vel e verifique se o seu valor √© uma string. Se for, exiba a mensagem "√â uma string", caso contr√°rio, exiba a mensagem "N√£o √© uma string".

resultValue("caseString", "A")
resultValue("caseString", 1)

//5. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um booleano. Se for, exiba a mensagem "√â um booleano", caso contr√°rio, exiba a mensagem "N√£o √© um booleano".
resultValue("caseBoolean", true)
resultValue("caseBoolean", 1)

//6. Crie um script que declare duas vari√°veis e exiba o resultado da subtra√ß√£o entre elas.
//7. Crie um script que declare duas vari√°veis e exiba o resultado da multiplica√ß√£o entre elas.
//8. Crie um script que declare duas vari√°veis e exiba o resultado da divis√£o entre elas.
resultValue("caseCalc")
//9. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero par. Se for, exiba a mensagem "√â um n√∫mero par", caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero par".
resultValue("parOuImpar")
// alert(parOuImpar)
//10. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero √≠mpar. Se for, exiba a mensagem "√â um n√∫mero √≠mpar", caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero √≠mpar".
resultValue("ImparOupar")
alert(arrayMsg)
